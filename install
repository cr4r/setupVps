#!/bin/bash

installer="./installer" && [[ ! -d ${installer} ]] && mkdir ${installer}

if [[ "${EUID}" -ne 0 ]]; then
    msg -verm "Kamu harus jalankan script ini mode root"
    exit 1
fi

msg () {
    BRAN='\033[1;37m' && VERMELHO='\e[31m' && VERDE='\e[32m' && AMARELO='\e[33m'
    AZUL='\e[34m' && MAGENTA='\e[35m' && MAG='\033[1;36m' &&NEGRITO='\e[1m' && SEMCOR='\e[0m'
    case $1 in
        -ne)cor="${VERMELHO}${NEGRITO}" && echo -ne "${cor}${2}${SEMCOR}";;
        -ama)cor="${AMARELO}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
        -verm)cor="${AMARELO}${NEGRITO}[!] ${VERMELHO}" && echo -e "${cor}${2}${SEMCOR}";;
        -azu)cor="${MAG}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
        -verd)cor="${VERDE}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
        -bra)cor="${BRAN}${NEGRITO}" && echo -ne "${cor}${2}${SEMCOR}";;
        "-bar2"|"-bar")cor="${AZUL}${NEGRITO}———————————————————————— ${2} ————————————————————————————" && echo -e "${SEMCOR}${cor}${SEMCOR}";;
    esac
}
export -f msg

# Lakukan sudo su

aturFirewall () {
    msg -ama "Menghidupkan dan mengatur Firewall "
    a() { if [[ $@ = "" ]];then echo "halo"; else echo $@; fi; }
    
    if [[ $@ = "on" ]];then
        ufw enable -y &>/dev/null
        ufw allow ssh  &>/dev/null
        ufw allow http &>/dev/null
        ufw allow https &>/dev/null
        elif [[ $@ = "off" ]];then
        ufw disable -y &>/dev/null
        elif [[ $@ != "" ]];then
        IFS=' '
        for portt in "$@";do
            ufw allow $portt &>/dev/null
        done
    fi
}
export -f msg

installModule(){
    msg -bar "Tahap awal"
    msg -ama "Membuat module update"
    msg -ama "Untuk mempermudah user dalam mengupdate sistem"
    echo "sudo apt-get update&&sudo apt-get upgrade -y&&sudo apt-get dist-upgrade -y&&sudo apt-get autoremove -y" > /bin/update&&sudo chmod 777 /bin/update
    msg -ama "Silahkan ketik, 'update' untuk mengupdate sistem"
    msg -ama "(1) Menginstall Module ..."
    sudo apt-get install curl &>/dev/null
    tput cuu1 && tput dl1
    sudo apt-get install wget -y &>/dev/null
    msg -ama "(2) Menginstall Module ..."
    sudo apt-get install git -y &>/dev/null
    tput cuu1 && tput dl1
    msg -ama "(3) Menginstall Module ..."
    sudo apt-get install python3 -y &>/dev/null
    tput cuu1 && tput dl1
    msg -ama "(4) Menginstall Module ..."
    sudo apt-get install apache2 -y &>/dev/null
    tput cuu1 && tput dl1
    msg -ama "(5) Menginstall Module ..."
    sudo apt-get install nginx-full -y &>/dev/null
    tput cuu1 && tput dl1
    msg -ama "(6) Menginstall Module ..."
    sudo apt-get install libc6 -y &>/dev/null
    tput cuu1 && tput dl1
    msg -ama "(7) Menginstall Module ..."
    sudo apt-get install libstdc++6 -y &>/dev/null
    tput cuu1 && tput dl1
    msg -ama "(8) Menginstall Module ..."
    sudo apt-get install ufw -y &>/dev/null
    tput cuu1 && tput dl1
    msg -ama "Menginstall Module Selesai!"
}

buatVariabel() {
    msg -bar "Pertanyaan"
    while [[ ${onfirewall} != @(s|S|y|Y|n|N) ]]; do
        read -p "$(msg -ama "Apakah anda ingin menghidupkan firewall? (Y/T): ")" onfirewall
        tput cuu1 && tput dl1
    done
    msg -ama "Firewall Hidup ? $onfirewall"
    if [[ onfirewall = @(s|S|y|Y) ]];then
        aturFirewall on
    fi
}
export -f buatVariabel

float_data () {
    ofc="\033[0m${gren}(#OFC)"
    dev="\033[0m${gren}(#DEV)"
    bet="\033[0m${gren}(#BET)"
    case $1 in
        "code-server.sh")echo -ne "$(msg -verd "[$2]") $(msg -verm2 ">") " && msg -azu "Code Server";;
        *)echo -ne "$(msg -verd "[$2]") $(msg -verm2 ">") " && msg -azu "${1^^} \033[1;33m($(fun_trans "Tanpa deskripsi")!)";;
    esac
}

##################################################################
# cd /opt&&sudo chmod -R 755 ./&&sudo wget https://nodejs.org/download/release/v14.14.0/node-v14.14.0-linux-x64.tar.gz &>/dev/null&&sudo tar -xvf node-* &>/dev/null
# echo """# NodeJS
# export NODEJS_HOME=/opt/node-v14.14.0-linux-x64/bin
# export PATH=\$NODEJS_HOME:\$PATH""" >>/etc/bash.bashrc&&. /etc/bash.bashrc

installModule
buatVariabel

local Numb=1
for arqs in $(ls ${installer}); do
    float_data "$arqs" "$Numb" && {
        script[$Numb]="$arqs"
        let Numb++
    }
done
